[{"content":"","date":null,"permalink":"/","section":"","summary":"","title":""},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/metasploit/","section":"Tags","summary":"","title":"MetaSploit"},{"content":"","date":null,"permalink":"/tags/meterpreter/","section":"Tags","summary":"","title":"Meterpreter"},{"content":"A year ago while testing a https reverse meterpreter shell after a 15 or 30 minutes my session would die. After investigating I made sure my reverse payload was not been dectected by the anti-virus, but the isse was still there.\nI tried the TCP Meterpreter Shell and that resolved the issue, somehow could be the network conditions affecting the HTTPS connection as a result the payload wasn\u0026rsquo;t a good fit for that environment.\nLeason learned if a specific payload doesn\u0026rsquo;t work, try a different one.\nBut this issue lead me to further investigate and see what could be on my control to improve the connection and I found I could set the following parameters for the meterpreter sessions:\nComm Timeout (Communication timeout) Retry Total Time Retry Wait Time. You will have to experiment with the values until you reach the one that best suitable for the network environment. I recommend to use Only if you already have attempted to change payloads and you still have issues.\nThe Command:\nset_timeouts -x 0 -c 100000 -w 2500 -t 100000 Flag and meaning\nThe -x stands for Expiration Timeout The -c stands for Communication Timeout The -w stands for Retry Wait Time the -t stands for Retry Total Time To view the results of newly configured settings run the following:\nget_timeouts Reference: Metasploit Timeout control\n","date":"2 March 2024","permalink":"/posts/meterpreter_shell_timeout/","section":"Posts","summary":"A year ago while testing a https reverse meterpreter shell after a 15 or 30 minutes my session would die.","title":"Meterpreter Session Time out"},{"content":"","date":null,"permalink":"/categories/offensivesecurity/","section":"Categories","summary":"","title":"OffensiveSecurity"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/tags/powershell/","section":"Tags","summary":"","title":"Powershell"},{"content":"While training Red Teaming or Penetration Test hacking on plataforms like Hack the Box or previous offensive security training like OSCP or OSEP.\nOne thing I noticed is during lateral movement through pivoting between the machines if I had to perform port scan enumeration on hosts located on different subnet/network utilizing proxychain+nmap or chisel+nmap, that was very painful and a nightmare.\nNmap + Proxychains or Nmap + chisel did not work very well for me and for that reason i came up with something different and that was to leverage what native powershell has to offer, but for the offensive security side of it.\nIf you have to scan large amount of ports even twerking the settings in nmap and proxychains will not give much gains compared to powershell. Below is a small snipped of powershell code that I developed and used multiple times during my training days that helped me and saved me a lot of time.\nMy personal opnion on powershell is an awesome tool and one should master and be used as Read Teamer or Penetration Tester.\nPowershell Scanner Code # I used Runspace feature in powershell that allows to run multiple commands by creating new threads on existing process. The CreateRunSpacePool values 1,100 means mininum and maximum number of threads allowed to run at the same time. The AddScript is where you add the desired code to run.\n$RunspacePool = [runspacefactory]::CreateRunspacePool(1,100) $RunspacePool.Open() $PowerShell = [powershell]::Create() $PowerShell.RunspacePool = $RunspacePool $PowerShell.AddScript({1..65535 | ForEach-Object { if((New-Object System.Net.Sockets.TcpClient).ConnectAsync(\u0026#34;YOUR_IP_HERE\u0026#34;,$_).wait(100)){write-host \u0026#34;Port $_ is opened\u0026#34;}}}) $Jobs = $PowerShell.BeginInvoke() If you want to go beyond you can improve the code snippet to run on multiple ips or creating a script that accept IP as an argument.\n","date":"2 March 2024","permalink":"/posts/powershellscan/","section":"Posts","summary":"While training Red Teaming or Penetration Test hacking on plataforms like Hack the Box or previous offensive security training like OSCP or OSEP.","title":"Powershell Scanner"},{"content":"","date":null,"permalink":"/tags/programming/","section":"Tags","summary":"","title":"Programming"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"All contents on this blog related to CyberSecurity is for educational insights. If testing, ensure it\u0026rsquo;s on devices you own or are authorized to test. I disclaim responsibility for any misuse, emphasizing educational purposes. I do not endorse criminal activity, and engaging in such activities will lead to criminal charges.\nOpinions are my own and do not reflect those of my employer.\n","date":"1 March 2024","permalink":"/disclaimer/","section":"","summary":"All contents on this blog related to CyberSecurity is for educational insights.","title":"Disclaimer"},{"content":"Welcome to my personal blog, where I document research, share insights, and contribute knowledge. With over 17 years in data protection, I\u0026rsquo;ve dedicated myself to helping companies safeguard their valuable information, handling diverse projects, and navigating disaster recovery scenarios.\nI will share my jorney on CyberSecurity by sharing insights and personal research on topics such as malware development commonly used in Red Teaming assesstment, Penetration testing, Binary exploitation, and Web application security.\nLet\u0026rsquo;s empower individuals and organizations to fortify their digital defenses.\nTraining Platform\nBugBountyHunter HackTheBox Certified on Offensive Security\nRed Team Operator Level 3 (APTLabs Hack the Box) Offensive Security Experienced Penetration Tester (OSEP) Offensive Security Web Expert (OSWE) Offensive Security Certified Professional (OSCP) OSCP OSWE OSEP Experienced in the following Data Protection Solutions:\nIBM Spectrum Protect Veritas NetBackup Commvault Dell Data Domain Certified Data Protection Softwares:\nIBM Certified Deployment Professional, Tivoli Storage Manager V7.1 (2015) IBM Certified Deployment Professional, Tivoli Storage Manager V6.3 (2012) IBM Certified Deployment Professional, Tivoli Storage Manager FastBack 6.1.1 (2011) IBM Certified Deployment Professional, Tivoli Storage Manager V6.2 (2010) IBM Certified Deployment Professional, Tivoli Storage Manager V6.1 (2009) IBM Certified Deployment Professional, Tivoli Storage Manager V5.5 (2009) IBM Certified Deployment Professional, Tivoli Storage Manager V5.4 (2008) Certified ITIL V3 Foundation (2011) ","date":"1 March 2024","permalink":"/about/","section":"","summary":"Welcome to my personal blog, where I document research, share insights, and contribute knowledge.","title":"About"},{"content":"TDB # ","date":"1 March 2024","permalink":"/posts/exploitdev_beginner/","section":"Posts","summary":"TDB # ","title":"Buffer Overflow 101"},{"content":"","date":null,"permalink":"/tags/exploitdev/","section":"Tags","summary":"","title":"ExploitDev"}]